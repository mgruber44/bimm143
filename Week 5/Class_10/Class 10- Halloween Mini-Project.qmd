---
title: "Class 10: Halloween Mini-Project"
name: Max Gruber
date: 05/05/2023
format: pdf
---

# 1. Importing candy data

```{r}
candy_file <- "candy-data.csv"
candy = read.csv(candy_file, row.names=1)
head(candy)
```

### Q1. How many different candy types are in this dataset?

```{r}
dim(candy)
```

There are 85 different candies in the dataset.

### Q2. How many fruity candy types are in the dataset?

```{r}
sum(candy$fruity)
```

There are 38 fruity candy types in the dataset.

# 2. What is your favorate candy?

```{r}
candy["Twix",]$winpercent
```

### **Q3**. What is your favorite candy in the dataset and what is it's `winpercent` value?

```{r}
candy["Almond Joy",]$winpercent
```

My favorite candy in the dataset is Almond Joy. It has a `winpercent` of 50.35.

### **Q4**. What is the `winpercent` value for "Kit Kat"?

```{r}
candy["Kit Kat",]$winpercent
```

It is 76.77.

### **Q5**. What is the `winpercent` value for "Tootsie Roll Snack Bars"?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

It is 49.65.

```{r}
#install.packages("skimr")
library("skimr")
skim(candy)
```

### **Q6**. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

Yes, all of the variables are on a scale of 0-1 except for winpercent, which is on a scale of 0-100.

### **Q7**. What do you think a zero and one represent for the `candy$chocolate` column?

A zero probably represents a 'no' (i.e. no chocolate is in that candy), where as a one represents a 'yes' (i.e. chocolate is in that candy).

### Q8. Plot a histogram of `winpercent` values.

```{r}
hist(candy$winpercent)
```

### **Q9**. Is the distribution of `winpercent` values symmetrical?

No, the data is slightly skewed to the right (data is concentrated toward the left side of the graph).

### **Q10**. Is the center of the distribution above or below 50%?

The center of the distribution is below 50%.

### **Q11**. On average is chocolate candy higher or lower ranked than fruit candy?

```{r}
table(as.logical(candy$chocolate))

#winpercent of only chocolate candies
candy$winpercent[ as.logical(candy$chocolate)]
```

```{r}
mean(candy$winpercent[as.logical(candy$chocolate)])
mean(candy$winpercent[as.logical(candy$fruity)])
```

On average, chocolate candy is higher ranked than fruity candy (60.92% compared to 44.12%).

### **Q12**. Is this difference statistically significant?

```{r}
chocolate_mean <- candy$winpercent[as.logical(candy$chocolate)]
fruity_mean <- candy$winpercent[as.logical(candy$fruity)]

t.test(chocolate_mean,fruity_mean)
```

Yes, the difference is significantly different, as the p-value is much lower than the alpha value (p=value = 2.871e-08).

# 3. Overall Candy Rankings

### **Q13**. What are the five least liked candy types in this set?

```{r}
head(candy[order(candy$winpercent),], n=5)
```

The five least liked candy types are Nik L Nip, Boston Baked Beans, Chiclets, Super Bubble, and Jawbusters.

### **Q14**. What are the top 5 all time favorite candy types out of this set?

```{r}
tail(candy[order(candy$winpercent),], n=5)
```

The top 5 candies of all time in this data set are Reese's Peanut butter cup, Reese's miniatures, Twix, Kit Kat, and Snickers.

### **Q15**. Make a first barplot of candy ranking based on `winpercent` values.

```{r}
library(ggplot2)

ggplot(candy) + 
  aes(winpercent, rownames(candy)) +
  geom_col()
```

### **Q16**. This is quite ugly, use the `reorder()` function to get the bars sorted by `winpercent`?

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col()
```

```{r}
my_cols=rep("black", nrow(candy))
my_cols[as.logical(candy$chocolate)] = "chocolate"
my_cols[as.logical(candy$bar)] = "brown"
my_cols[as.logical(candy$fruity)] = "pink"

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy),winpercent)) +
  geom_col(fill=my_cols) 
```

### **Q17**. What is the worst ranked chocolate candy?

The worst ranked chocolate candy is Sixlets.

### **Q18**. What is the best ranked fruity candy?

The best ranked fruity candy is Starburst.

# 4. Taking a look at pricepercent

```{r}
#install.packages("ggrepel")
library(ggrepel)

# How about a plot of price vs win
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) + 
  geom_text_repel(col=my_cols, size=3.3, max.overlaps = 5)
```

### **Q19**. Which candy type is the highest ranked in terms of `winpercent` for the least money - i.e. offers the most bang for your buck?

The highest ranked candy in terms of `winpercent` for the least money is Reese's Miniatures.

### **Q20**. What are the top 5 most expensive candy types in the dataset and of these which is the least popular?

```{r}
ord <- order(candy$pricepercent, decreasing = TRUE)
head( candy[ord,c(11,12)], n=5 )
```

The top 5 most expensive candy types are Nik L Nip, Nestle Smarties, Ring pop, Hershey's Krackel, and Hershey's Milk Chocolate. The least popular is Nik L Nip.

### **Q21**. Make a barplot again with `geom_col()` this time using `pricepercent` and then improve this step by step, first ordering the x-axis by value and finally making a so called "dot chat" or "lollipop" chart by swapping `geom_col()` for `geom_point()` + `geom_segment()`.

```{r}
# Make a lollipop chart of pricepercent
ggplot(candy) +
  aes(pricepercent, reorder(rownames(candy), pricepercent)) +
  geom_segment(aes(yend = reorder(rownames(candy), pricepercent), 
                   xend = 0), col="gray40") +
    geom_point()
```

# 5. Exploring the correlation structure

```{r}
#install.packages('corrplot')
library(corrplot)

cij <- cor(candy)
corrplot(cij)
```

### **Q22**. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

Chocolate and fruity are anti-correlated.

### **Q23**. Similarly, what two variables are most positively correlated?

The two variables that are most positively correlated are chocolate and winpercent.

# 6. Principal Component Analysis

```{r}
pca <- prcomp(candy, scale = TRUE)
summary(pca)
```

```{r}
plot(pca$x[,1:2])
```

```{r}
plot(pca$x[,1:2], col=my_cols, pch=16)
```

```{r}
# Make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
```

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)

p
```

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

```{r}
#install.packages('plotly')
#library(plotly)
#ggplotly(p)
```

![](newplot.png)

```{r}
par(mar=c(8,4,2,2))
barplot(pca$rotation[,1], las=2, ylab="PC1 Contribution")
```

### **Q24**. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruity, hard, and pluribus variables are picked up strongly by PC1 in the positive direction. PC1 plots the broadest variance first, and considering these variables that makes sense as there is the most variability in fruity, hard, and plrubius candies (there are may different types/variations of those kinds of candies that can come in all kinds of textures and flavors).
